{"version":3,"sources":["server.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["'use strict';\r\n\r\n/**\r\n * Created by User on 2016/3/24.\r\n */\r\n\r\n\r\n\r\nconst isDebug = true;\r\nconst fakeAuthCode = true;\r\n\r\nconst _ = require('lodash');\r\nconst path = require('path');\r\n\r\n\r\nrequire('./time.js');\r\n\r\n\r\nlet twilioClient = require('twilio')(\"AC7161db8bee36103cc7d6c29fe33404ec\", \"1c76b95b0c1f28236cb262e6b32ba8ab\");\r\n\r\nlet authCodes = []; //{phone  : String , authCode: String , endTime : Number , triedTimes:Numbers}\r\n\r\nlet nodemailer = require('nodemailer');\r\n\r\nlet mailTransport = nodemailer.createTransport({\r\n    service: 'Gmail',\r\n    auth: {\r\n        user: 'o.grpbuy@gmail.com',\r\n        pass: 'asd1q2w3e'\r\n    }\r\n});\r\n\r\nlet MongoClient = require('mongodb').MongoClient;\r\n\r\n// Connection URL\r\nlet mongoUrl = 'mongodb://localhost:27017/onigiri';\r\nlet mongoDb = null;//暂时没用\r\nlet Database = require('./database.js');\r\n\r\n\r\nlet connectMongo = function (option) {\r\n    let db = null;\r\n\r\n    return new Promise(resolve=> {\r\n        if (db) {\r\n            resolve(db);\r\n            return;\r\n        }\r\n\r\n\r\n        MongoClient.connect(mongoUrl).then(async _db=> {\r\n            mongoDb = _db;\r\n\r\n            let myDb = new Database(mongoDb, option);//不能提前赋值,因为js传递引用的副本\r\n            console.log('database connecting!');\r\n\r\n            await myDb.toMemory().then(r=>db = r).catch(e=>console.log(e.stack));\r\n\r\n            console.log('database connected!');\r\n\r\n            //清空空白团\r\n            setInterval(()=> {\r\n                //得到所有沒過期的團\r\n                let availableGroups = _.filter(db.GROUP, grp=>grp.grpStatus === 0 || grp.grpStatus === 1);\r\n\r\n                for (let g of availableGroups) {\r\n                    let deadLine = new Date(g.grpTime);\r\n                    if (deadLine.getTime() - new Date().getTime() < 0) {\r\n                        db.setValueToDb('GROUP', row=>row.grpId === g.grpId, 'grpStatus', -1);\r\n\r\n                        //團失敗通知團主、團員\r\n                        // let metName = db.MERCHANT.find(met=>met.metId === g.metId).metName;\r\n                        // let host = db.USER.find(u=>u.usrId === g.grpHostId);\r\n                        // let time = new Date(g.grpTime);\r\n                        // sendMail(host.usrMail, '販團 : ' + metName + ' - 您創建的團購已經開團失敗', `<p>超過截止時間-開團失敗,\r\n                        //         <p>店家: ${metName}</p>\r\n                        //         <p>截止時間: ${(time.getMonth() + 1)}/${time.getDate()} ${time.getHours()}:${(time.getMinutes() < 10 ? '0' + time.getMinutes() : time.getMinutes())}</p>\r\n                        //         <p>領取地點: ${g.grpAddr}</p>\r\n                        //         <br><br><br><p>信件由販團系統自動發送: <a href=\"http://bit.do/groupbuy\">http://bit.do/groupbuy</a> </p>`);\r\n                        //\r\n                        // let html = `<p>超過截止時間-開團失敗,\r\n                        //         <p>團主名稱為: ${host.usrName}</p>\r\n                        //         <p>店家: ${metName}</p>\r\n                        //         <p>截止時間: ${(time.getMonth() + 1)}/${time.getDate()} ${time.getHours()}:${(time.getMinutes() < 10 ? '0' + time.getMinutes() : time.getMinutes())}</p>\r\n                        //         <p>領取地點: ${g.grpAddr}</p>\r\n                        //         <br><br><br><p>信件由販團系統自動發送: <a href=\"http://bit.do/groupbuy\">http://bit.do/groupbuy</a> </p>`;\r\n                        //\r\n                        // let orders = db.ORDER.filter(ord=>ord.grpId === g.grpId  && _.includes([0,1,2] , ord.ordStatus));\r\n                        // let users = [];\r\n                        //\r\n                        // for (let order of orders) {\r\n                        //     let user = users.find(usr=>usr.usrId === order.usrId);\r\n                        //     if (!user) {\r\n                        //         users.push({usrId: order.usrId});\r\n                        //     }\r\n                        // }\r\n                        // console.log('=====users', JSON.stringify(users));\r\n                        // for(let usr of users){\r\n                        //     let usrMail = db.USER.find(u=>u.usrId === usr.usrId).usrMail;\r\n                        //     sendMail(host.usrMail, '販團 : ' + metName + ' - 您加入的團購已經開團失敗',html);\r\n                        // }\r\n\r\n                    }\r\n                }\r\n            }, 5000);\r\n\r\n            resolve(db);\r\n\r\n        }).catch(e=> {\r\n            console.log(e);\r\n            progress.exit(1);\r\n        })\r\n    });\r\n};\r\n\r\nlet sendMail = function (usrMail, subject, html) {\r\n\r\n    if (usrMail && subject && html) {\r\n        mailTransport.sendMail({\r\n            from: 'o.grpbuy@gmail.com',\r\n            to: usrMail,\r\n            subject: subject,\r\n            html: html\r\n        }, function (err) {\r\n            if (err) {\r\n                console.log('Unable to send email: ' + err);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nlet Server = function (db) {\r\n\r\n\r\n    let express = require('express');\r\n    let bodyParser = require('body-parser');\r\n\r\n    let app = express();\r\n\r\n\r\n    let self = this;\r\n\r\n    //this.db = isDebug ? db : undefined;??????????????????????????????????????????????????\r\n\r\n\r\n    let allowCrossDomain = function (req, res, next) {\r\n        res.header('Access-Control-Allow-Origin', '*');\r\n        res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\r\n        res.header('Access-Control-Allow-Headers', 'Content-Type');\r\n        next();\r\n    };\r\n\r\n\r\n    app.use(allowCrossDomain);//CORS middleware\r\n    app.use(bodyParser.urlencoded({extended: false}));\r\n\r\n    app.use(express.static('public'));\r\n    app.use(bodyParser.urlencoded({extended: false}));\r\n\r\n    app.get('/db', function (req, res) {\r\n        if (isDebug) {\r\n            res.json(db);\r\n        }\r\n    });\r\n\r\n    app.post('/addUser', function (req, res) {\r\n\r\n            req.body = JSON.parse(req.body.data);\r\n\r\n            let usrName = req.body.usrName;\r\n            let usrPwd = req.body.usrPwd;\r\n            let usrMail = req.body.usrMail;\r\n            let usrMobi = req.body.usrMobi;\r\n            let authCode = req.body.authCode;\r\n\r\n\r\n            if (!usrName || !usrPwd || !usrMobi || !authCode) {\r\n                res.json({success: false, msg: '資料填寫不完整!'});\r\n                return;\r\n            }\r\n\r\n            let result = authCodes.find(obj=>obj.phone === usrMobi);\r\n            if (!result) {\r\n                res.json({success: false, msg: '請驗證手機號碼'});\r\n                return;\r\n            } else if (result.authCode !== authCode) {\r\n                result.triedTimes++;\r\n                if (result.triedTimes === 3) {\r\n                    authCodes.splice(authCodes.findIndex(obj=>obj.phone === usrMobi), 1);\r\n                }\r\n                res.json({success: false, msg: '驗證碼輸入錯誤'});\r\n                return;\r\n            } else if (db.USER.find(o=>o.usrName === usrName)) {\r\n                res.json({success: false, msg: '帳號名稱重複'});\r\n                return;\r\n            }\r\n\r\n\r\n            //console.log(JSON.stringify(req.body));\r\n            self.addUser(usrName, usrPwd, usrMail, usrMobi, function (result) {\r\n                res.json(result);\r\n            });\r\n        }\r\n    );\r\n\r\n    app.post('/merchant', function (req, res) {\r\n\r\n            req.body = JSON.parse(req.body.data);\r\n\r\n            let metName = req.body.metName;\r\n            let metPhone = req.body.metPhone;\r\n            let metMinPrice = Number(req.body.metMinPrice);\r\n            let metPicUrl = req.body.metPicUrl || '';\r\n            let metType = req.body.metType || '其他';\r\n\r\n\r\n            if (!(metName && metPhone && metMinPrice !== null && metMinPrice >= 0)) {\r\n                res.json({success: false, msg: '資料輸入錯誤'});\r\n                return;\r\n            }\r\n\r\n            self.addMerchantPromise({metName, metPhone, metMinPrice, metPicUrl, metType}).then((merchant)=> {\r\n                res.json({success: true, merchant});\r\n            }).catch(()=>res.json({success: false}));\r\n\r\n        }\r\n    );\r\n\r\n    app.post('/dishes', function (req, res) {\r\n\r\n            req.body = JSON.parse(req.body.data);\r\n\r\n            console.log(JSON.stringify(req.body));\r\n\r\n            for (let dish of req.body) {\r\n                dish.dihPrice = Number(dish.dihPrice);\r\n\r\n                if (!(dish.dihName && dish.dihPrice !== null && dish.metId !== null)) {\r\n                    res.json({success: false, msg: '資料不完整'});\r\n                    return;\r\n                }\r\n\r\n                if (dish.dihPrice < 0) {\r\n                    res.json({success: false, msg: '商品價格不正確'});\r\n                    return;\r\n                }\r\n            }\r\n\r\n            req.body = req.body.map(row=> {\r\n                row.dihType = row.dihType || '主食';\r\n                return row;\r\n            });\r\n\r\n\r\n            self.addDishPromise(req.body).then((result)=> {\r\n                res.json({success: true, dishes: result});\r\n            }).catch(()=>res.json({success: false}));\r\n\r\n        }\r\n    );\r\n\r\n    app.post('/userAuth', function (req, res) {\r\n            let usrName = req.body.usrName;\r\n            let usrPwd = req.body.usrPwd;\r\n\r\n            if (!(usrName && usrPwd)) {\r\n                res.json({success: false, msg: '資料不完整'});\r\n                return;\r\n            }\r\n\r\n            //console.log(JSON.stringify(req.body));\r\n\r\n            self.userAuth(usrName, usrPwd, function (result) {\r\n                res.json(result);\r\n            });\r\n\r\n        }\r\n    );\r\n\r\n    app.get('/allGroup', function (req, res) {\r\n        // Pass to next layer of middleware\r\n        self.allAvailableGroup(function (result) {\r\n            res.json(result);\r\n        });\r\n    });\r\n\r\n    app.get('/groupById/:id', (req, res)=> {\r\n        self.getGroupById(Number(req.params.id), result=>res.json(result));\r\n    });\r\n\r\n    app.get('/unjoinedGroups/:usrId', (req, res)=> {\r\n        self.getUnjoinedGroups(Number(req.params.usrId), result=>res.json(result));\r\n    });\r\n\r\n    app.get('/allMerchant', function (req, res) {\r\n        // Pass to next layer of middleware\r\n        self.allMerchant(function (result) {\r\n            res.json(result);\r\n        });\r\n    });\r\n\r\n    app.get('/merchantById/:id', function (req, res) {\r\n        // Pass to next layer of middleware\r\n\r\n        self.getMerchantById(Number(req.params.id), function (result) {\r\n            res.json(result);\r\n        });\r\n    });\r\n\r\n    app.get('/cancelOrder/:grpId/:usrId', function (req, res) {\r\n        let grpId = Number(req.params.grpId);\r\n        let usrId = Number(req.params.usrId);\r\n        // let ordStatus = db.ORDER.find(o=>o.grpId === grpId && o.usrId === usrId).ordStatus;\r\n        // let usrOrds = db.ORDER.filter(o=>o.grpId === grpId && o.usrId === usrId && _.includes([-2, 0, 3], o.ordStatus));\r\n        let usrOrds = db.ORDER.filter(o=>o.grpId === grpId && o.usrId === usrId);\r\n\r\n        for (let order of usrOrds) {\r\n            //例外判断, 只有待审查的订单可以被取消\r\n            if (order.ordStatus === 0) {\r\n                db.setValueToDb('ORDER', o=>o.grpId === grpId && o.usrId === usrId, 'ordStatus', -2);\r\n                res.json({success: true});\r\n            } else if (order.ordStatus === 3) {\r\n                db.setValueToDb('ORDER', row=>row.ordId === order.ordId, 'ordStatus', 1);\r\n                db.setValueToDb('ORDER', row=>row.ordId === order.ordId, 'updateOrdNum', undefined);\r\n                res.json({success: true});\r\n            } else {\r\n                if (order.ordStatus === -2) {\r\n                    res.json({success: false, err: '訂單已被取消'});\r\n                } else {\r\n                    res.json({success: false, err: '訂單已被確認,無法取消'});\r\n                }\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n\r\n    app.post('/group', function (req, res) {\r\n\r\n            //console.log(req.body);\r\n\r\n            req.body = JSON.parse(req.body.data);\r\n            let grpHostId = Number(req.body.grpHostId);\r\n            let dishes = req.body.dishes;\r\n            let metId = Number(req.body.metId);\r\n            let addr = req.body.addr;\r\n            let gorTime = req.body.gorTime;\r\n            let grpAmountLimit = Number(req.body.grpAmountLimit) || 0;\r\n\r\n            //TODO Check Time\r\n            let deadLine = new Date(gorTime.replace(/(\\d*)年(\\d*)月(\\d*)日\\,/gi, '$1/$2/$3'));\r\n            gorTime = deadLine.getTime();\r\n\r\n            if (gorTime < new Date().getTime()) {\r\n                res.json({success: false, msg: '截止時間不能早於當前時間'});\r\n                return;\r\n            }\r\n\r\n\r\n            if (!( grpHostId !== null && dishes && metId && addr && gorTime)) {\r\n                res.json({success: false, msg: '資料不完整'});\r\n                console.log({grpHostId, dishes, metId, addr, gorTime})\r\n                return;\r\n\r\n            }\r\n\r\n\r\n            self.postGroup(grpHostId, dishes, metId, addr, gorTime, grpAmountLimit, function (result) {\r\n                res.json(result);\r\n            });\r\n\r\n        }\r\n    );\r\n\r\n    app.post('/joinGroup', function (req, res) {\r\n            req.body = JSON.parse(req.body.data);\r\n            let usrId = Number(req.body.usrId);\r\n            let dishes = req.body.dishes;\r\n            let grpId = req.body.grpId;\r\n            let comments = req.body.comments;\r\n\r\n            if (!(usrId !== null && dishes && dishes.length !== 0 && grpId)) {\r\n                res.json({success: false, msg: '資料不完整'});\r\n                return;\r\n            }\r\n\r\n\r\n            self.joinGroupPromise(usrId, dishes, grpId, comments).then(result=> {\r\n                res.json(result);\r\n            }).catch(e=> {\r\n                console.log(e);\r\n                res.json(e);\r\n            });\r\n\r\n        }\r\n    );\r\n\r\n    app.post('/groupStatus', function (req, res) {\r\n            req.body = JSON.parse(req.body.data);\r\n            let grpId = Number(req.body.grpId);\r\n            let grpStatus = Number(req.body.grpStatus);\r\n            if (!(grpId !== null && grpStatus !== null)) {\r\n                res.json({success: false, msg: '資料不完整'});\r\n                return;\r\n            }\r\n\r\n            self.updateGroupStatusPromise(grpId, grpStatus).then(result=> {\r\n                res.json(result);\r\n            }).catch(e=> {\r\n                res.json(e);\r\n            });\r\n\r\n        }\r\n    );\r\n\r\n    app.post('/mobiAuth', function (req, res) {\r\n            let usrMobi = req.body.data;\r\n            if (!usrMobi) {\r\n                res.json({success: false, msg: '資料不完整'});\r\n                return;\r\n            }\r\n\r\n            self.getTwilioCode(usrMobi).then(result=> {\r\n                res.json({success: true});\r\n            }).catch(e=> {\r\n                res.json(e);\r\n            });\r\n\r\n        }\r\n    );\r\n\r\n\r\n    app.get('/groupedOrdersByUserId/:id', function (req, res) {\r\n            let usrId = Number(req.params.id);\r\n            self.getGroupedOrdersByUserId(usrId, result=> {\r\n                //console.log(result);\r\n                res.json(result);\r\n            });\r\n        }\r\n    );\r\n\r\n    app.get('/groupedOrdersAndSumsByHostId/:id', function (req, res) {\r\n            let usrId = Number(req.params.id);\r\n\r\n            self.getGroupedOrdersAndSumsByHostIdPromise(usrId).then(result=>res.json(result));\r\n        }\r\n    );\r\n\r\n    app.get('/follow/:usrId/:hostId', function (req, res) {\r\n        try {\r\n            let usrId = Number(req.params.usrId);\r\n            let hostId = Number(req.params.hostId);\r\n\r\n            if (db.FOLLOW.find(f=>f.usrId === usrId && f.hostId === hostId)) {\r\n                db.delFromJsonDb('FOLLOW', f=>f.usrId === usrId && f.hostId === hostId);\r\n                res.json({success: true});\r\n                return;\r\n            }\r\n\r\n            let fowId = db.FOLLOW.length === 0 ? 0 : _.maxBy(db.FOLLOW, \"fowId\").fowId + 1;\r\n            db.pushToDbPromise('FOLLOW', {\r\n                fowId,\r\n                usrId: usrId,\r\n                hostId: hostId\r\n            }).then(()=> res.json({success: true})\r\n            ).catch(e=> res.json({err: e.toString()}));\r\n\r\n        } catch (e) {\r\n            console.log(e.toString());\r\n            res.json({success: false, err: e.toString()});\r\n\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n    app.get('/followStatus/:usrId/:hostId', function (req, res) {\r\n        try {\r\n            let usrId = req.params.usrId;\r\n            let hostId = req.params.hostId;\r\n\r\n            if (db.FOLLOW.find(f=>f.usrId === usrId && f.hostId === hostId)) {\r\n                res.json({followed: true});\r\n            } else {\r\n                res.json({followed: false});\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e.toString());\r\n            res.json({err: e.toString()});\r\n\r\n        }\r\n\r\n    });\r\n\r\n    app.post('/updateOrdStatus', function (req, res) {\r\n        req.body = JSON.parse(req.body.data);\r\n        let ordId = Number(req.body.ordId);\r\n        let ordStatus = Number(req.body.ordStatus);\r\n        // console.log(\"ordId:\" + ordId + \",ordStatus:\" + ordStatus);\r\n\r\n        self.updateOrdStatusPromise(ordId, ordStatus).then(result=> {\r\n            res.json(result);\r\n        }).catch(e=> {\r\n            res.json(e);\r\n        });\r\n    });\r\n\r\n    app.get('/confirmOrder/:id', function (req, res) {\r\n        let usrId = Number(req.params.id);\r\n\r\n        self.confirmOrder(usrId).then(result=>res.json(result));\r\n    });\r\n\r\n    app.get('/grpUsersOrdersByHostId/:hostId', function (req, res) {\r\n        let hostId = Number(req.params.hostId);\r\n        let from = Number(req.query.from);\r\n        self.getGrpUsersOrdersByHostIdPromise(hostId, from).then(result=>res.json(result));\r\n    });\r\n\r\n    app.post('/getGrpMember', function (req, res) {\r\n        req.body = JSON.parse(req.body.data);\r\n        let gmrId = Number(req.body.gmrId);\r\n        let comStatus = Number(req.body.comStatus);\r\n\r\n        self.getComment(gmrId, comStatus).then(result=> {\r\n            res.json(result);\r\n        }).catch(e=> {\r\n            res.json(e);\r\n        });\r\n\r\n    });\r\n\r\n    app.post('/refuseOrder', function (req, res) {\r\n        req.body = JSON.parse(req.body.data);\r\n        let usrId = Number(req.body.usrId);\r\n        let grpId = Number(req.body.grpId);\r\n        let usrOrds = req.body.usrOrds;\r\n        console.log('usrId , grpId', usrId, grpId);\r\n\r\n        self.refuseOrder(usrId, grpId, usrOrds, result=> {\r\n            res.json(result);\r\n        });\r\n    });\r\n\r\n    app.get('/chamgeMailNotify/:usrId/:mailWhen/:isNotify', function (req, res) {\r\n        let usrId = Number(req.params.usrId);\r\n        let mailWhen = req.params.mailWhen;\r\n        let isNotify = req.params.isNotify;\r\n\r\n        // console.log('usrId mailWhen isNotify',usrId,mailWhen,isNotify);\r\n        self.chamgeMailNotify(usrId, mailWhen, isNotify, result=> {\r\n            res.json(result);\r\n        });\r\n    });\r\n\r\n    app.post('/updateUsrmail', function (req, res) {\r\n        req.body = JSON.parse(req.body.data);\r\n        let usrId = Number(req.body.usrId);\r\n        let usrMail = req.body.usrMail;\r\n\r\n        self.updateUsrmail(usrId, usrMail, result=> {\r\n            res.json(result);\r\n        });\r\n    });\r\n\r\n    app.post('/updatePwd', function (req, res) {\r\n        req.body = JSON.parse(req.body.data);\r\n        let usrId = Number(req.body.usrId);\r\n        let usrPwd = req.body.usrPwd;\r\n        let NewUsrPwd = req.body.NewUsrPwd;\r\n\r\n        self.updatePwd(usrId, usrPwd, NewUsrPwd, result=> {\r\n            res.json(result);\r\n        });\r\n    });\r\n\r\n    app.listen(8080, function () {\r\n        console.log('' +\r\n            'app listening on port 8080!');\r\n    });\r\n\r\n    this.addDishPromise = function (dishes) {\r\n\r\n        return new Promise((resolve, reject)=> {\r\n            for (let dish of dishes) {\r\n                dish.dihId = _.maxBy(db.DISH, \"dihId\").dihId + 1;\r\n                //db.pushToDb('DISH', dish);\r\n\t\t\t\tdb.pushManyToDb('DISH', dish);\r\n            }\r\n            resolve(dishes);\r\n        });\r\n    };\r\n\r\n    this.getTwilioCode = function (userMobi) {\r\n        return new Promise(function (resolve, reject) {\r\n            let min = 100;\r\n            let max = 999;\r\n            let randomAuth = Math.floor(Math.random() * (max - min + 1) + min) + '';\r\n            if (fakeAuthCode) {\r\n                randomAuth = '123';\r\n                resolve('123');\r\n                authCodes.push({\r\n                    phone: userMobi,\r\n                    authCode: randomAuth,\r\n                    endTime: new Date().getTime() + 1000 * 60 * 5,\r\n                    triedTimes: 0\r\n                });\r\n\r\n                setTimeout(()=> {\r\n                    let indexOfAuthCode = authCodes.findIndex(obj=>obj.authCode === authCodes);\r\n                    if (indexOfAuthCode) {\r\n                        authCodes.splice(indexOfAuthCode, 1);\r\n                    }\r\n                }, 1000 * 60 * 5);\r\n                return;\r\n            }\r\n\r\n            twilioClient.messages.create({\r\n                body: '您的販團驗證碼是' + randomAuth,\r\n                to: '+886' + userMobi,  // Text this number\r\n                from: '+13342030485' // From a valid Twilio number\r\n            }, function (err, message) {\r\n                if (err) {\r\n                    console.log(err);\r\n                    reject(randomAuth);\r\n                } else {\r\n                    console.log(message && message.sid);\r\n                    resolve(randomAuth);\r\n                    authCodes.push({\r\n                        phone: userMobi,\r\n                        authCode: randomAuth,\r\n                        endTime: new Date().getTime() + 1000 * 60 * 5,\r\n                        triedTimes: 0\r\n                    });\r\n\r\n                    setTimeout(()=> {\r\n                        let indexOfAuthCode = authCodes.findIndex(obj=>obj.authCode === authCodes);\r\n                        if (indexOfAuthCode) {\r\n                            authCodes.splice(indexOfAuthCode, 1);\r\n                        }\r\n                    }, 1000 * 60 * 5);\r\n                }\r\n            });\r\n\r\n\r\n        });\r\n    };\r\n\r\n    this.addUser = function (usrName, usrPwd, usrMail, usrMobi, callback) {\r\n        let usrId = 0;\r\n\r\n        for (let user of db.USER) {\r\n            if (user.usrId > usrId) {\r\n                usrId = user.usrId;\r\n            }\r\n            usrId = Number(usrId) + 1;\r\n        }\r\n\r\n\r\n        let usrCreateTime = new Date().toString();\r\n        let newUser = {\r\n            usrId: usrId,\r\n            usrName: usrName,\r\n            usrPwd: usrPwd,\r\n            usrMail: usrMail,\r\n            usrCreateTime: usrCreateTime,\r\n            usrMobi: usrMobi,\r\n            mailWhenJoin: true,\r\n            mailWhenRefused: true,\r\n        };\r\n\r\n\r\n        if (newUser.usrName.length !== 0 && newUser.usrPwd.length !== 0 && newUser.usrMobi.length === 10) {\r\n            db.pushToDbPromise('USER', newUser).then(res=> {\r\n                callback({success: true});\r\n            });\r\n\r\n        } else {\r\n            callback({success: false});\r\n        }\r\n    };\r\n\r\n    /*\r\n     * 參數\r\n     {metName,\r\n     metPhone,\r\n     metMinPrice,\r\n     metPicUrl,\r\n     metType}\r\n     */\r\n\r\n    this.addMerchantPromise = function (merchant) {\r\n        return new Promise((resolve, reject)=> {\r\n            merchant.metId = _.maxBy(db.MERCHANT, 'metId').metId + 1;\r\n\r\n            db.pushToDb('MERCHANT', merchant);\r\n\r\n            resolve(merchant);\r\n\r\n        });\r\n    };\r\n\r\n    this.userAuth = function (usrName, usrPwd, callback) {\r\n        let isSuccess = false;\r\n        for (let index in db.USER) {\r\n            if (db.USER[index].usrName == usrName && db.USER[index].usrPwd == usrPwd) {\r\n                callback({\r\n                    success: 1,\r\n                    user: {\r\n                        usrName: db.USER[index].usrName,\r\n                        usrId: db.USER[index].usrId,\r\n                        usrMobi: db.USER[index].usrMobi,\r\n                        usrMail: db.USER[index].usrMail,\r\n                        mailWhenJoin: db.USER[index].mailWhenJoin,\r\n                        mailWhenRefused: db.USER[index].mailWhenRefused,\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!isSuccess) {\r\n            callback({success: false, err: '帳號密碼不匹配'});\r\n        }\r\n    };\r\n\r\n    //unjoined and available groups by user id\r\n    this.getUnjoinedGroups = function (usrId, callback) {\r\n        let that = this;\r\n\r\n        let joinedGroupIds = _.uniqBy(db.ORDER.filter(ord=>ord.usrId === usrId), 'grpId').map(ord=>ord.grpId);\r\n\r\n        //包含了已经结束的团\r\n        let allUnjoinedGroups = db.GROUP.filter(grp=> !joinedGroupIds.find(grpId=>grpId === grp.grpId));\r\n\r\n        //并不是标准类别\r\n        let unjoinedAndAvailable = allUnjoinedGroups.filter(g=>g.grpStatus === 0 || g.grpStatus === 1);\r\n\r\n        let stdGroups = unjoinedAndAvailable.map(g=>that.createClassGroupByGroupId(g.grpId));\r\n\r\n\r\n        callback(_.sortBy(stdGroups, row=>-new Date(row.grpTime)));\r\n    };\r\n\r\n    this.allGroup = function (callback) {\r\n        let result = [];\r\n\r\n        for (let _group of db.GROUP) {\r\n            let group = this.createClassGroupByGroupId(_group.grpId);\r\n            result.push(group);\r\n\r\n        }\r\n        callback(result);\r\n    };\r\n\r\n    this.allAvailableGroup = function (callback) {\r\n        let result = [];\r\n\r\n        for (let _group of db.GROUP.filter(g=>g.grpStatus === 0 || g.grpStatus === 1)) {\r\n            let group = this.createClassGroupByGroupId(_group.grpId);\r\n            result.push(group);\r\n        }\r\n\r\n        callback(_.sortBy(result, row=>-new Date(row.grpTime)));\r\n    };\r\n\r\n    this.getGroupById = function (id, callback) {\r\n        let group = this.createClassGroupByGroupId(id);\r\n        callback(group);\r\n    };\r\n\r\n\r\n    this.allMerchant = function (callback) {\r\n        let result = [];\r\n        for (let _merchant of db.MERCHANT) {\r\n            let merchant = this.createClassMerchantById(_merchant.metId);\r\n            result.push(\r\n                merchant\r\n            );\r\n        }\r\n        callback(result);\r\n    };\r\n\r\n\r\n    this.getMerchantById = function (id, callback) {\r\n        let merchant = this.createClassMerchantById(id);\r\n        callback(merchant);\r\n    };\r\n\r\n    this.postGroup = function (grpHostId, dishes, metId, addr, gorTime, grpAmountLimit, callback) {\r\n        let lastGroup = _.maxBy(db.GROUP, 'grpId');\r\n        let grpId = lastGroup ? lastGroup.grpId + 1 : 1;\r\n        db.pushToDb('GROUP', {\r\n            grpId,\r\n            grpHostId: grpHostId,\r\n            metId: metId,\r\n            grpAddr: addr,\r\n            grpTime: gorTime,\r\n            grpStatus: 0,\r\n            grpCreateTime: new Date().getTime(),\r\n            grpAmount: 0,\r\n            grpAmountLimit: grpAmountLimit || 0\r\n\r\n            //minAmount: minAmount\r\n        });\r\n        for (let dihId of dishes) {\r\n            let lastDish = _.maxBy(db.GROUP_DISHES, 'gdeId');\r\n            let gdh = {\r\n                gdeId: lastDish ? lastDish.gdeId + 1 : 1,\r\n                dihId: Number(dihId),\r\n                grpId\r\n            };\r\n            db.pushToDb(\"GROUP_DISHES\", gdh);\r\n        }\r\n\r\n\r\n        //发送信息给follow的人\r\n        let usrIds = db.FOLLOW.filter(f=>f.hostId === grpHostId);\r\n        console.log('usrIds grpHostId', JSON.stringify(usrIds), grpHostId);\r\n        if (usrIds.length !== 0) {\r\n            // for (let usr of db.USER.filter(u=>_.includes(usrIds, u.usrId))) {\r\n            for (let usr of usrIds) {\r\n                let usrMail = db.USER.find(u=>u.usrId === usr.usrId).usrMail;\r\n                let time = new Date(gorTime);\r\n                self.sendMail(usrMail, '您關注的團主開團啦', `<p>您關注的團主開團啦,\r\n                <p>團主名稱為: ${db.USER.find(u=>u.usrId === grpHostId).usrName}</p>\r\n                <p>店家: ${db.MERCHANT.find(m=>m.metId === metId).metName}</p>\r\n                <p>截止時間: ${(time.getMonth() + 1)}/${time.getDate()} ${time.getHours()}:${(time.getMinutes() < 10 ? '0' + time.getMinutes() : time.getMinutes())}</p>\r\n                <p>領取地點: ${addr}</p>\r\n                <br><br><br><p>信件由販團系統自動發送: <a href=\"http://bit.do/groupbuy\">http://bit.do/groupbuy</a> </p>`);\r\n            }\r\n        }\r\n\r\n\r\n        callback({success: 1});\r\n    };\r\n\r\n    this.joinGroupPromise = function (usrId, dishes, grpId, comments) {\r\n        //console.log(JSON.stringify({usrId, dishes, grpId}));\r\n\r\n\r\n        return new Promise((resolve, reject)=> {\r\n            //拒絕用戶對同壹個group連續點兩次餐點\r\n            //if (db.ORDER.find(ord=>ord.usrId === usrId && ord.grpId === grpId)) {\r\n            //    reject(\"重復加團!\");\r\n            //    return;\r\n            //}\r\n\r\n            //只有0,1状态的团可以团购\r\n            if (!_.includes([0, 1], db.GROUP.find(grp=>grp.grpId === grpId).grpStatus)) {\r\n                reject(\"團購已經截止!\");\r\n                return;\r\n            }\r\n\r\n            //是否超过最高上限\r\n            let amountThisTime = 0;\r\n            let funcFindDish = dih=> d=>d.dihId === dih.dihId;\r\n            for (let dih of dishes) {\r\n                amountThisTime += db.DISH.find(funcFindDish(dih)).dihPrice * dih.num;\r\n            }\r\n            let grpAmountLimit = Number(db.GROUP.find(grp=>grp.grpId === grpId).grpAmountLimit);\r\n            let grpAmount = db.GROUP.find(grp=>grp.grpId === grpId).grpAmount;\r\n            if (grpAmountLimit !== 0 && amountThisTime + grpAmount > grpAmountLimit) {\r\n                //團購上限\r\n                reject('超過團購上限! 超出' + (amountThisTime + grpAmount - grpAmountLimit) + '元');\r\n                return;\r\n            } else {\r\n                //最小外送金額\r\n                let g = db.GROUP.find(g=>g.grpId === grpId);\r\n                let metId = g.metId;\r\n                let metMinPrice = db.MERCHANT.find(m=>m.metId === metId).metMinPrice;\r\n                db.setValueToDb(\"GROUP\", row=>row.grpId === grpId, \"grpAmount\", amountThisTime + grpAmount);\r\n                if (amountThisTime + grpAmount >= metMinPrice) {\r\n                    db.setValueToDb(\"GROUP\", row=>row.grpId === grpId, \"grpStatus\", 1);\r\n                }\r\n\r\n            }\r\n\r\n            let usrName = db.USER.find(usr=>usr.usrId === usrId).usrName;\r\n            let addOrd = function (usrName, dihId, num, ordStatus) {\r\n                let lastOrder = _.maxBy(db.ORDER, 'ordId');\r\n\r\n                db.pushManyToDb(\"ORDER\", {\r\n                    ordId: lastOrder ? lastOrder.ordId + 1 : 1,\r\n                    grpId: grpId,\r\n                    usrId: usrId,\r\n                    usrName: usrName,  //07.03 add\r\n                    dihId: dihId,\r\n                    ordNum: num,\r\n                    ordCreateTime: new Date().getTime(),\r\n                    // ordStatus為訂單狀態(-1:拒絕,0:待審查,1:已確認=未付款,2:已付款)\r\n                    ordStatus: ordStatus\r\n                });\r\n            };\r\n\r\n            let orderedDishIds = _.chain(db.ORDER).filter(ord=>ord.usrId === usrId && ord.grpId === grpId).map(ord=>ord.dihId).value();\r\n            // let selectRowByDishId = dihId => row=>row.dihId === dihId;\r\n            // let isSend = !db.GROUP_MEMBER.find(usr => usr.usrId === usrId && usr.grpId === grpId);   //加購不通知\r\n\r\n            let g = db.GROUP.find(g=>g.grpId === grpId);\r\n            let hostId = g.grpHostId;\r\n            let ordStatus = usrId === hostId ? 1 : 0; //團主訂單不需要經過確認\r\n\r\n            // 加購情況(有舊訂單):\r\n            // ordStatus==-1(拒絕) --->(both)新增另一張訂單\r\n            // ordStatus==0 (待審查)-->(相同商品)直接修改\r\n            //                                      -->(不同商品)新增訂單\r\n            // ordStatus==1 (已接受)-->(相同商品)增加屬性、改狀態  (both)需再次確認\r\n            //                                     -->(不同商品)新增訂單\r\n            let orders = db.ORDER.filter(ord=>ord.usrId === usrId && ord.grpId === grpId && _.includes([0, 1], ord.ordStatus));\r\n\r\n            // let orders = db.ORDER.filter(ord=>ord.usrId === usrId && ord.grpId === grpId && ord.ordStatus===0 || ord.ordStatus===1);\r\n\r\n            // let orders = db.ORDER.filter(function (ord) {\r\n            //     if (ord.usrId === usrId && ord.grpId === grpId && (ord.ordStatus === 0 || ord.ordStatus === 1)) {\r\n            //         console.log('usrId grpId', usrId, grpId);\r\n            //         console.log('ord.usrId ord.grpId ord.ordStatus', ord.usrId, ord.grpId, ord.ordStatus);\r\n            //         return ord;\r\n            //     }\r\n            // });\r\n            console.log('joinGroupPromise====orders' + JSON.stringify(orders));\r\n\r\n            for (let {dihId, num} of dishes) {\r\n                if (num === 0 || !_.isNumber(num)) {\r\n                    continue;\r\n                }\r\n\r\n                // if (orders)\r\n                console.log('dihId num', dihId, num);\r\n                if (orders.length === 0) {  //無舊訂單\r\n                    addOrd(usrName, dihId, num, ordStatus);\r\n                    console.log('無舊訂單 : ' + grpId, usrId, usrName, dihId, num, ordStatus);\r\n\r\n                } else { //有舊訂單\r\n\r\n                    let sameProduct = orders.find(ord=>ord.dihId === dihId);\r\n                    console.log('====sameProduct', JSON.stringify(sameProduct));\r\n                    if (sameProduct) {\r\n                        if (sameProduct.ordStatus === 0) {\r\n                            // ordStatus==0 (待審查)-->(相同商品)直接修改\r\n                            console.log('ordStatus==0 (待審查)-->(相同商品)直接修改');\r\n                            db.setValueToDb('ORDER', ord => ord.dihId === dihId && ord.usrId === usrId && ord.grpId === grpId, 'ordNum',\r\n                                num + db.ORDER.find(ord => ord.dihId === dihId && ord.usrId === usrId && ord.grpId === grpId).ordNum);\r\n                        } else if (sameProduct.ordStatus === 1) {\r\n                            //  ordStatus==1 (已接受)-->(相同商品)需再次確認\r\n                            console.log('ordStatus==1 (已接受)-->(相同商品)需再次確認');\r\n                            db.setValueToDb('ORDER', ord => ord.dihId === dihId && ord.usrId === usrId && ord.grpId === grpId, 'updateOrdNum', num);\r\n                            db.setValueToDb('ORDER', ord => ord.dihId === dihId && ord.usrId === usrId && ord.grpId === grpId, 'ordStatus', 3);\r\n                            //ordStatus=3 加購中\r\n                        }\r\n\r\n                    } else {\r\n                        // ordStatus==0 (待審查)-->(不同商品)新增訂單\r\n                        //  ordStatus==1 (已接受)-->(不同商品)需再次確認\r\n                        console.log('ordStatus==0、1-->(不同商品)新增訂單');\r\n                        addOrd(usrName, dihId, num, ordStatus);\r\n                    }\r\n\r\n\r\n                }\r\n            }\r\n\r\n\r\n            if (comments) {\r\n                let lastGroupMember = _.maxBy(db.GROUP_MEMBER, gmr=>gmr.gmrId);\r\n                db.pushToDb(\"GROUP_MEMBER\", {\r\n                    gmrId: lastGroupMember ? lastGroupMember.gmrId + 1 : 1,\r\n                    usrId: usrId,\r\n                    usrName: usrName,  //07.03 add\r\n                    grpId: grpId,\r\n                    comments: comments\r\n                });\r\n            }\r\n\r\n\r\n            //最小外送金額\r\n            // let g = db.GROUP.find(g=>g.grpId === grpId);\r\n            let metId = g.metId;\r\n            // let hostId = g.grpHostId;\r\n            let m = db.MERCHANT.find(m=>m.metId === metId);\r\n            let metMinPrice = m.metMinPrice;\r\n            let amount = 0;\r\n\r\n            self.getGroupedOrdersAndSumsByHostIdPromise(hostId).then(result=> {\r\n                // console.log(\"result.groupedOrderSums\"+JSON.stringify(result.groupedOrderSums));\r\n                let groupOrderSum = result.groupedOrderSums.find(orderSum=>orderSum.group.grpId === grpId);\r\n                // console.log(\"groupOrderSum\", groupOrderSum);\r\n\r\n                if (groupOrderSum) {\r\n                    for (let orderSum of groupOrderSum.orderSums) {\r\n                        let price = orderSum.dish.dihPrice;\r\n                        let num = orderSum.ordNum;\r\n                        let total = price * num;\r\n                        amount += total;\r\n                    }\r\n                    db.setValueToDb(\"GROUP\", row=>row.grpId === grpId, \"grpAmount\", amount);\r\n\r\n                    if (amount >= metMinPrice) {\r\n                        db.setValueToDb(\"GROUP\", row=>row.grpId === grpId, \"grpStatus\", 1);\r\n                    }\r\n                }\r\n                resolve({success: 1});\r\n            }).catch(e=>console.log(e));\r\n\r\n\r\n            // console.log('snedornot'+snedornot);\r\n            // 通知團主 : 有新成員加入  ;  不通知 : 團主加入\r\n            let usrhost = db.USER.find(usr=>usr.usrId === hostId);\r\n            if (usrId !== hostId && usrhost.mailWhenJoin) {\r\n                // let hostMail = db.USER.find(usr=>usr.usrId === hostId).usrMail;\r\n                let hostMail = usrhost.usrMail;\r\n                let metName = m.metName;\r\n                let subject = '販團 : ' + metName + ' - 有新成員加入!';\r\n                let now = new Date();\r\n                let detime = new Date(g.grpTime);\r\n\r\n                let html = '<p>申請時間: ' + (now.getMonth() + 1) + '/' + now.getDate() + ' ' + now.getHours() + ':' + (now.getMinutes() < 10 ? '0' + now.getMinutes() : now.getMinutes()) + '</p>' +\r\n                    '<p>申請人: ' + usrName + '</p>' +\r\n                    '<p>申請團購: ' + metName + '</p>' +\r\n                    '<p>團購截止時間: ' + (detime.getMonth() + 1) + '/' + detime.getDate() + ' ' + detime.getHours() + ':' + (detime.getMinutes() < 10 ? '0' + detime.getMinutes() : detime.getMinutes()) + '</p>' +\r\n                    '<br><br><br><p>信件由販團系統自動發送: <a href=\"http://bit.do/groupbuy\">http://bit.do/groupbuy</a> </p>';\r\n                self.sendMail(hostMail, subject, html);\r\n            }\r\n\r\n        });\r\n\r\n    };\r\n\r\n    this.convertOrdersToGroupedOrders = function (orders) {\r\n        let groupedOrders = [];\r\n\r\n        for (let order of orders) {\r\n\r\n            // console.log(\"ordStatus:\" + order.ordStatus);\r\n            let tOrder = groupedOrders.find(gor=>gor.group.grpId === order.grpId);\r\n\r\n            if (tOrder) {\r\n                if (order.ordStatus > 0) {\r\n                    tOrder.orders.push(order);\r\n                }\r\n            } else {\r\n                let group = this.createClassGroupByGroupId(order.grpId);\r\n\r\n                if (order.ordStatus === 0) {\r\n                    group.ordNotConfirm = true;\r\n                    groupedOrders.push({group: group, orders: []});\r\n                } else if (order.ordStatus === -1) {\r\n                    groupedOrders.push({group: group, orders: []});\r\n                } else if (order.ordStatus > 0) {\r\n                    groupedOrders.push({group: group, orders: [order]});\r\n                } else {\r\n                    groupedOrders.push({group: group, orders: []});\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return _.sortBy(groupedOrders, row=>-new Date(row.group.grpTime));\r\n    };\r\n\r\n    this.convertOrdersToGroupedOrdersUsr = function (orders) {\r\n        let groupedOrders = [];\r\n        for (let order of orders) {\r\n\r\n            let tOrder = groupedOrders.find(gor=>gor.group.grpId === order.grpId);\r\n            if (tOrder) {\r\n                tOrder.orders.push(order);\r\n            } else {\r\n                let group = this.createClassGroupByGroupId(order.grpId);\r\n\r\n                //顯示給使用者的狀態\r\n                let status = '';\r\n\r\n                switch (group.grpStatus) {\r\n                    case 0:\r\n                    case 1:\r\n                        switch (order.ordStatus) {\r\n                            case -1:\r\n                                status = '被團主拒絕';\r\n                                break;\r\n                            case -2:\r\n                                status = '已取消';\r\n                                break;\r\n                            case 0:\r\n                                status = '等待團主審查';\r\n                                break;\r\n                            case 1:\r\n                                if (group.grpStatus === 0) {\r\n                                    status = '已確認, 未達到起送金額';\r\n                                } else {\r\n                                    status = '等待商家配送';\r\n                                }\r\n                                break;\r\n                            case 2:\r\n                                status = '付款完成';\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        status = '已送達, 待付款';\r\n                        break;\r\n                    case 3:\r\n                        status = '已完成';\r\n                        break;\r\n                    case -1:\r\n                        status = '開團失敗';\r\n                        break;\r\n                }\r\n\r\n\r\n                groupedOrders.push({group: group, orders: [order], status: status});\r\n            }\r\n        }\r\n        return _.sortBy(groupedOrders, row=>-new Date(row.group.grpTime));\r\n    };\r\n\r\n\r\n    this.getGroupedOrdersByUserId = function (usrId, callback) {\r\n        let orders = _.sortBy(db.ORDER.filter(ord=>ord.usrId === usrId), obj=>-obj.ordCreateTime).map(ord=> {\r\n\r\n            let newOrd = {\r\n                ordId: ord.ordId,\r\n                grpId: ord.grpId,\r\n                usrId: ord.usrId,\r\n                usrName: ord.usrName,   //07.03 add\r\n                dish: db.DISH.find(d=>d.dihId === ord.dihId),\r\n                ordNum: ord.ordNum,\r\n                ordStatus: ord.ordStatus,    //07.03 add\r\n                ordCreateTime: new Date(ord.ordCreateTime).pattern('yyyy/MM/dd hh:mm:ss'),\r\n\r\n            };\r\n            return newOrd;\r\n        });\r\n\r\n        let groupedOrders =\r\n            self.convertOrdersToGroupedOrdersUsr(orders);\r\n        callback(groupedOrders);\r\n    };\r\n\r\n    this.getGroupedOrdersAndSumsByHostIdPromise = function (hostId) {\r\n        let that = this;\r\n\r\n        return new Promise(resolve=> {\r\n            let groupedOrders = [];\r\n            let groupedOrderSums = [];\r\n\r\n            let groupIds = db.GROUP.filter(grp=>grp.grpHostId === hostId);\r\n            let orders = db.ORDER.filter(ord=> {\r\n                //ord.grpId === groupId\r\n\r\n                return db.GROUP.find(grp=>grp.grpId === ord.grpId).grpHostId === hostId;\r\n            }).map(ord=> {\r\n\r\n                let newOrd = {\r\n                    ordId: ord.ordId,\r\n                    grpId: ord.grpId,\r\n                    usrId: ord.usrId,\r\n                    usrName: ord.usrName,   //07.03 add\r\n                    dish: db.DISH.find(d=>d.dihId === ord.dihId),\r\n                    ordNum: ord.ordNum,\r\n                    ordStatus: ord.ordStatus,    //07.03 add\r\n                    ordCreateTime: new Date(ord.ordCreateTime).pattern('yyyy/MM/dd hh:mm:ss'),\r\n                    updateOrdNum: ord.updateOrdNum ? ord.updateOrdNum : undefined,\r\n                };\r\n\r\n                return newOrd;\r\n            });\r\n\r\n            //console.log('group',db.GROUP,'groupedOrders', orders);\r\n\r\n            groupedOrders =\r\n                self.convertOrdersToGroupedOrders(orders);\r\n\r\n            self.formatOrders(groupedOrders, (result)=> {\r\n                groupedOrderSums = result;\r\n            });\r\n\r\n\r\n            //處理空白團\r\n            let emptyGroups = db.GROUP.filter(grp=> grp.grpHostId === hostId && !db.ORDER.find(ord=>ord.grpId === grp.grpId));\r\n            if (emptyGroups) {\r\n                emptyGroups.map(eptGroup=> {\r\n                    let group = that.createClassGroupByGroupId(eptGroup.grpId);\r\n                    groupedOrders.push({group, orders: []});\r\n                    groupedOrderSums.push({group, orderSums: []});\r\n                });\r\n            }\r\n\r\n            // console.log(\"groupedOrderSumsgroupedOrderSums:\" + JSON.stringify(groupedOrderSums));\r\n\r\n            resolve({\r\n                groupedOrders: _.orderBy(groupedOrders, obj=>obj.group.grpCreateTime, 'desc'),\r\n                // groupedOrderSums: _.sortBy(groupedOrderSums, obj=>obj.group.grpCreateTime)\r\n                groupedOrderSums: _.orderBy(groupedOrderSums, obj=>obj.group.grpCreateTime, 'desc')\r\n                // groupedOrderSums: groupedOrderSums\r\n            });\r\n        });\r\n    };\r\n\r\n    this.confirmOrder = function (hostId) {\r\n        let that = this;\r\n\r\n        return new Promise(resolve=> {\r\n            let groupedOrders = [];\r\n            let groupedOrderSums = [];\r\n\r\n            let groupIds = db.GROUP.filter(grp=>grp.grpHostId === hostId);\r\n            let orders = db.ORDER.filter(ord=> {\r\n\r\n                return db.GROUP.find(grp=>grp.grpId === ord.grpId).grpHostId === hostId;\r\n            }).map(ord=> {\r\n\r\n                let newOrd = {\r\n                    ordId: ord.ordId,\r\n                    grpId: ord.grpId,\r\n                    usrId: ord.usrId,\r\n                    usrName: ord.usrName,   //07.03 add\r\n                    dish: db.DISH.find(d=>d.dihId === ord.dihId),\r\n                    ordNum: ord.ordNum,\r\n                    ordStatus: ord.ordStatus,    //07.03 add\r\n                    ordCreateTime: new Date(ord.ordCreateTime).pattern('yyyy/MM/dd hh:mm:ss'),\r\n                    updateOrdNum: ord.updateOrdNum ? ord.updateOrdNum : undefined,\r\n                };\r\n                return newOrd;\r\n            });\r\n\r\n            groupedOrders =\r\n                self.convertOrdersToGroupedOrdersUsr(orders);\r\n\r\n            self.formatOrders(groupedOrders, (result)=> {\r\n                groupedOrderSums = result;\r\n            });\r\n\r\n            //處理空白團\r\n            let emptyGroups = db.GROUP.filter(grp=> grp.grpHostId === hostId && !db.ORDER.find(ord=>ord.grpId === grp.grpId));\r\n            if (emptyGroups) {\r\n                emptyGroups.map(eptGroup=> {\r\n                    let group = that.createClassGroupByGroupId(eptGroup.grpId);\r\n                    groupedOrders.push({group, orders: []});\r\n                    groupedOrderSums.push({group, orderSums: []});\r\n                });\r\n            }\r\n            resolve({\r\n                groupedOrders,\r\n                groupedOrderSums: groupedOrderSums\r\n            });\r\n        });\r\n    };\r\n\r\n    this.formatOrders = function (groupedOrders, callback) {\r\n        let groupedOrderSums = [];\r\n        //console.log('groups',db.GROUP);\r\n        //console.log('groupedOrdersgroupedOrdersgroupedOrders:', JSON.stringify(groupedOrders));\r\n\r\n        for (let {group, orders} of groupedOrders) {\r\n            let orderSums = [];\r\n\r\n            for (let {ordId, usrId, dish, ordNum, ordStatus} of orders) {\r\n                //如果存在直接加\r\n                let order = orderSums.find(orm=>orm.dish.dihId === dish.dihId);\r\n\r\n                if (order) {\r\n                    order.ordNum += ordNum;\r\n                } else {\r\n                    orderSums.push({group, dish, ordNum});\r\n                }\r\n            }\r\n            console.log({orderSums});\r\n\r\n\r\n            switch (group.grpStatus) {\r\n                case 0:\r\n                    group.grpStatusCh = \"未達外送金額\";\r\n                    group.btnChangeStatusName = \"未開團\";\r\n                    group.grpNextStatus = 1;\r\n                    group.btnChangeStatusDisable = true;\r\n                    break;\r\n                case 1:\r\n                    group.grpStatusCh = \"已開團\";\r\n                    group.btnChangeStatusName = \"確認已送達\";\r\n                    group.grpNextStatus = 2;\r\n                    break;\r\n                case 2:\r\n                    group.grpStatusCh = \"已送達\";\r\n                    group.btnChangeStatusName = \"確認訂單已完成\";\r\n                    group.grpNextStatus = 3;\r\n                    break;\r\n                case 3:\r\n                    group.grpStatusCh = \"已完成\";\r\n                    group.btnChangeStatusName = \"重新開團\";\r\n                    group.grpNextStatus = 4;\r\n                    break;\r\n                case -1:\r\n                    group.grpStatusCh = \"開團失敗\";\r\n                    group.btnChangeStatusName = \"\";\r\n                    group.btnChangeStatusDisable = true;\r\n                    group.grpNextStatus = -2;\r\n                    break;\r\n            }\r\n\r\n            groupedOrderSums.push({group, orderSums});\r\n        }\r\n\r\n\r\n        callback(groupedOrderSums);\r\n    };\r\n\r\n    this.createClassMerchantById = function (metId) {\r\n        let result = _.cloneDeep(db.MERCHANT.find(merchant=>merchant.metId === metId));\r\n        result.menu = _.filter(db.DISH, (dish)=>dish.metId === metId);\r\n        return result;\r\n    };\r\n\r\n    this.createClassGroupByGroupId = function (grpId) {\r\n        let that = this;\r\n        let group = db.GROUP.find(g=>g.grpId === grpId);\r\n\r\n        if (!group) {\r\n            return null;\r\n        }\r\n\r\n        let menu = [];\r\n        let grpComments = [];\r\n        let grpDishes = _.filter(db.GROUP_DISHES, grh => grh.grpId === group.grpId).map(grh=> {\r\n                let grpDish = {};\r\n                grpDish.dish = _.find(db.DISH, dish=> dish.dihId === grh.dihId);\r\n                _.assign(grpDish, grh);\r\n                return grpDish;\r\n            }) || [];\r\n        grpDishes.map(grpDish=> {\r\n\r\n            //檢查是否已經存在DISH的分類.\r\n            let dihGroup = menu.find(dgp => dgp.dihType === grpDish.dish.dihType);\r\n            if (dihGroup) {\r\n                //已經有了就加入壹筆\r\n                dihGroup.dishes.push(grpDish.dish);\r\n            } else {\r\n                //如果沒有加入新的分類,和壹筆DISH\r\n                menu.push({dihType: grpDish.dish.dihType, dishes: [grpDish.dish]});\r\n            }\r\n        });\r\n\r\n        let merchant = db.MERCHANT.find(merchant => merchant.metId === group.metId);\r\n\r\n        // grpComments.push(db.GROUP_MEMBER.filter(g=>g.grpId === grpId));\r\n\r\n\r\n        let grpCom = db.GROUP_MEMBER.filter(g=>g.grpId === grpId);\r\n\r\n        for (let gc of grpCom) {\r\n            if (gc.comments) {\r\n                grpComments.push({\r\n                    gmrId: gc.gmrId,\r\n                    usrId: gc.usrId,\r\n                    usrName: gc.usrName,\r\n                    comStatus: gc.comStatus,\r\n                    comments: gc.comments\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        group = {\r\n            grpId: group.grpId,\r\n            grpAddr: group.grpAddr,\r\n            grpTime: new Date(group.grpTime).pattern('yyyy/MM/dd hh:mm:ss'),\r\n            grpHostName: (db.USER.find(user => user.usrId === group.grpHostId)).usrName,\r\n            merchant: merchant,\r\n            grpOrder: _.filter(db.GROUP_ORDER, (grr)=> grr.grpId === group.grpId) || [],\r\n            grpDishes: grpDishes,\r\n            grpHost: that.createUserByUserId(group.grpHostId),\r\n            grpStatus: group.grpStatus,\r\n            menu: menu,\r\n            grpCreateTime: new Date(group.grpCreateTime).pattern('yyyy/MM/dd hh:mm:ss'),\r\n            grpAmount: group.grpAmount || 0,\r\n            grpReachRatePercent: 100 * ((group.grpAmount || 0) / merchant.metMinPrice > 1 ? 1 : (group.grpAmount || 0) / merchant.metMinPrice),\r\n            grpAmountLimit: group.grpAmountLimit,\r\n            grpComments: grpComments\r\n        };\r\n\r\n        return group;\r\n    };\r\n\r\n    this.createUserByUserId = function (usrId) {\r\n        let _usr = db.USER.find(usr=>usr.usrId === usrId);\r\n        let user = {\r\n            usrId: _usr.usrId,\r\n            usrName: _usr.usrName,\r\n            usrMobi: _usr.usrMobi\r\n        };\r\n\r\n        return user;\r\n    };\r\n\r\n    this.updateGroupStatusPromise = function (grpId, grpStatus) {\r\n        return new Promise((resolve, reject)=> {\r\n            let group = db.GROUP.find(s=>grpId === s.grpId);\r\n\r\n            if (group.grpStatus >= 0 && group.grpStatus <= 2) {\r\n                db.setValueToDb('GROUP', row=>row.grpId === group.grpId, 'grpStatus', grpStatus);\r\n                //group.grpStatus = grpStatus;\r\n\r\n                resolve({success: 1});\r\n            }\r\n            else {\r\n                reject({success: 0});\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    this.cleanGroup = function () {\r\n        let today = new Date();\r\n\r\n        this.allGroup(function (result) {\r\n            //let timing = result[0].grpTime.replace(/月/,\"/\");\r\n            //console.log(result[0].grpTime);\r\n            //console.log(JSON.stringify(result));\r\n        });\r\n\r\n\r\n        //let t = setTimeout('Timer()', 500);\r\n    };\r\n\r\n    this.getStatus = function (grpId) {\r\n        return new Promise(resolve=> {\r\n            let status = db.GROUP.find(g=>grpId === g.grpId).grpStatus;\r\n            resolve(status);\r\n        });\r\n    };\r\n\r\n    this.getComment = function (gmrId, comStatus) {\r\n        return new Promise(resolve=> {\r\n            //TODO\r\n            let comments = db.GROUP_MEMBER.find(g=>g.grpId === grpId && g.usrId === usrId).comments;\r\n            resolve(comments);\r\n        });\r\n    };\r\n\r\n    this.updateOrdStatusPromise = function (ordId, ordStatus) {\r\n        //一次只能修改一個ordId的ordStatus\r\n        return new Promise((resolve, reject)=> {\r\n            let order = db.ORDER.find(s=>ordId === s.ordId);\r\n\r\n            if (order.ordStatus === 3 && ordStatus === -1) {\r\n                db.setValueToDb('ORDER', row=>row.ordId === order.ordId, 'ordStatus', 1);\r\n                db.setValueToDb('ORDER', row=>row.ordId === order.ordId, 'updateOrdNum', undefined);\r\n                return;\r\n            }\r\n\r\n            if (order.ordStatus != -1) {\r\n                db.setValueToDb('ORDER', row=>row.ordId === order.ordId, 'ordStatus', ordStatus);\r\n                if (order.updateOrdNum && order.updateOrdNum !== 0) {\r\n                    // console.log('updateOrdStatusPromise====order.updateOrdNum', order.updateOrdNum);\r\n                    db.setValueToDb('ORDER', row=>row.ordId === order.ordId, 'ordNum', order.ordNum + order.updateOrdNum);\r\n                    db.setValueToDb('ORDER', row=>row.ordId === order.ordId, 'updateOrdNum', undefined);\r\n                }\r\n                resolve({success: 1});\r\n            } else {\r\n                reject({success: 0});\r\n            }\r\n        });\r\n    };\r\n\r\n    this.getGrpUsersOrdersByHostIdPromise = function (hostId, from) {\r\n        //from :  0=> confirmOrder  , 1=>productDetail\r\n        return new Promise(resolve=> {\r\n            switch (from) {\r\n                case 0:\r\n                {\r\n                    self.confirmOrder(hostId).then(result=> {\r\n                        //  WHAT THE FUCK\r\n                        // console.log('switch 0');\r\n                        let GrpUsersOrders = self.convertGroupedOrdersToGrpUsrOrders([0, 3], result).GrpUsersOrders.filter(function (guo) {\r\n                            // guo.usrOrders = guo.usrOrders.filter(uo=>uo.ordStatus === 0);\r\n                            // console.log('====guo.usrOrders:' + JSON.stringify(guo.usrOrders));\r\n                            return guo.usrOrders.length !== 0 && guo.group.grpStatus !== -1;\r\n                        });\r\n                        // console.log('====GrpUsersOrders:' + JSON.stringify(GrpUsersOrders));\r\n                        resolve({GrpUsersOrders: GrpUsersOrders});\r\n                    });\r\n                    break;\r\n                }\r\n                case 1:\r\n                {\r\n                    self.getGroupedOrdersAndSumsByHostIdPromise(hostId).then(result=> {\r\n                        // console.log('switch 1');\r\n                        let GrpUsersOrders = self.convertGroupedOrdersToGrpUsrOrders([1, 2, 3], result);\r\n                        // console.log('====GrpUsersOrders:' + JSON.stringify(GrpUsersOrders));\r\n                        resolve(GrpUsersOrders);\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    this.convertGroupedOrdersToGrpUsrOrders = function (ordStatus, result) {\r\n        let GrpUsersOrders = {\r\n            GrpUsersOrders: []\r\n        };\r\n        // console.log('====result:' + JSON.stringify(result.groupedOrders));\r\n\r\n        for (let grpOrd of result.groupedOrders) {\r\n            let uos = [];\r\n            let grpComments = grpOrd.group.grpComments;\r\n\r\n            for (let order of grpOrd.orders) {\r\n                // console.log(_.includes(ordStatus, order.ordStatus));\r\n                if (_.includes(ordStatus, order.ordStatus)) {\r\n\r\n                    order.dish.ordNum = order.ordNum;\r\n                    order.ordNum = undefined;\r\n                    // console.log('====order:' + JSON.stringify(order));\r\n\r\n                    let uosobj = uos.find(u=>u.usrId === order.usrId);\r\n                    if (!uosobj) {\r\n                        uos.push({\r\n                            usrId: order.usrId,\r\n                            usrName: order.usrName,\r\n                            usrAmount: order.dish.ordNum * order.dish.dihPrice,\r\n                            // ordStatus: order.ordStatus,\r\n                            usrDishes: [{\r\n                                dihId: order.dish.dihId,\r\n                                dihName: order.dish.dihName,\r\n                                metId: order.dish.metId,\r\n                                dihType: order.dish.dihType,\r\n                                dihPrice: order.dish.dihPrice,\r\n                                ordNum: order.dish.ordNum,\r\n                                updateOrdNum: order.updateOrdNum ? order.updateOrdNum : undefined,\r\n                            }],\r\n                            usrComments: _.filter(grpComments, (com) => com.usrId === order.usrId),\r\n                            usrOrds: [{ordId: order.ordId, ordStatus: order.ordStatus}]\r\n                            // 無法理解錯在哪裡\r\n                            // ,usrDishesWhy: [order.dish]\r\n                        });\r\n                        // console.log('====order.dish:' + JSON.stringify(order.dish));\r\n\r\n                    } else {\r\n                        uosobj.usrAmount = uosobj.usrAmount + order.dish.ordNum * order.dish.dihPrice;\r\n                        // uosobj.usrDishes.push(order.dish);\r\n                        uosobj.usrDishes.push({\r\n                            dihId: order.dish.dihId,\r\n                            dihName: order.dish.dihName,\r\n                            metId: order.dish.metId,\r\n                            dihType: order.dish.dihType,\r\n                            dihPrice: order.dish.dihPrice,\r\n                            ordNum: order.dish.ordNum,\r\n                            updateOrdNum: order.updateOrdNum ? order.updateOrdNum : undefined,\r\n                        });\r\n                        uosobj.usrOrds.push({ordId: order.ordId, ordStatus: order.ordStatus});\r\n                    }\r\n                }\r\n            }\r\n            GrpUsersOrders.GrpUsersOrders.push({\r\n                group: grpOrd.group,\r\n                usrOrders: uos\r\n            });\r\n        }\r\n\r\n        // console.log('====GrpUsersOrders:' + JSON.stringify(GrpUsersOrders));\r\n        return GrpUsersOrders;\r\n    };\r\n\r\n    this.sendMail = function (usrMail, subject, html) {\r\n\r\n        if (usrMail && subject && html) {\r\n            mailTransport.sendMail({\r\n                from: 'o.grpbuy@gmail.com',\r\n                to: usrMail,\r\n                subject: subject,\r\n                html: html\r\n            }, function (err) {\r\n                if (err) {\r\n                    console.log('Unable to send email: ' + err);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    this.refuseOrder = function (usrId, grpId, usrOrds, callback) {\r\n        // let orders = db.ORDER.filter(ord => ord.usrId === usrId && ord.grpId === grpId);\r\n        // console.log('====usrOrds', JSON.stringify(usrOrds));\r\n        let user = db.USER.find(usr=>usr.usrId === usrId);\r\n\r\n        if (usrOrds && user.mailWhenRefused) {\r\n            let dishes = '';\r\n            let order;\r\n            for (let usrOrd of usrOrds) {\r\n                order = db.ORDER.find(ord=>ord.ordId === usrOrd.ordId);\r\n                let dihName = db.DISH.find(dih=>dih.dihId === order.dihId).dihName;\r\n                dishes += '<li>' + dihName + '  ' + order.ordNum + '份</li>'\r\n            }\r\n            // console.log(JSON.stringify(orders));\r\n            console.log('====dishes', dishes);\r\n\r\n\r\n            let g = db.GROUP.find(g=>g.grpId === grpId);\r\n            let metId = g.metId;\r\n            let metName = db.MERCHANT.find(m=>m.metId === metId).metName;\r\n            let ordCreateTime = order.ordCreateTime;\r\n            let hostName = db.USER.find(usr=>usr.usrId === g.grpHostId).usrName;\r\n\r\n            // 通知團員訂單被拒絕\r\n            let usrMail = db.USER.find(usr=>usr.usrId === usrId).usrMail;\r\n            let subject = '販團 : 很不幸的 - 您的申請遭到拒絕';\r\n            let jointime = new Date(ordCreateTime);\r\n\r\n            let html = '<p>申請時間: ' + (jointime.getMonth() + 1) + '/' + jointime.getDate() + ' ' + jointime.getHours() + ':' + (jointime.getMinutes() < 10 ? '0' + jointime.getMinutes() : jointime.getMinutes()) + '</p>' +\r\n                '<p>申請團購: ' + metName + '</p>' +\r\n                '<p>團主 : ' + hostName + '</p>' +\r\n                '<br><p>訂購項目: </p><ul>' + dishes + '</ul>' +\r\n                '<br><br><br><p>信件由販團系統自動發送: <a href=\"http://bit.do/groupbuy\">http://bit.do/groupbuy</a> </p>';\r\n\r\n            console.log('usrMail , metName ', usrMail, metName);\r\n\r\n            self.sendMail(usrMail, subject, html);\r\n\r\n            callback({success: 1});\r\n        }\r\n        else {\r\n            callback({success: 0});\r\n        }\r\n    };\r\n\r\n    this.chamgeMailNotify = function (usrId, mailWhen, isNotify, callback) {\r\n        // let user = db.USER.find(usr=>usr.usrId === usrId);\r\n        isNotify = isNotify === 'true' ? true : false;\r\n        console.log('====usrId mailWhen isNotify', usrId, mailWhen, isNotify);\r\n        db.setValueToDb(\"USER\", usr=>usr.usrId === usrId, mailWhen, isNotify);\r\n        callback({success: 1});\r\n\r\n    };\r\n\r\n    this.updateUsrmail = function (usrId, usrMail, callback) {\r\n        // let user = db.USER.find(usr=>usr.usrId === usrId);\r\n        console.log('====usrId usrMail', usrId, usrMail);\r\n        db.setValueToDb(\"USER\", usr=>usr.usrId === usrId, 'usrMail', usrMail);\r\n        callback({success: 1});\r\n    };\r\n\r\n    this.updatePwd = function (usrId, usrPwd, NewUsrPwd, callback) {\r\n        // let user = db.USER.find(usr=>usr.usrId === usrId);\r\n        // console.log('====usrId usrMail', usrId, usrPwd);\r\n        let user = db.USER.find(usr=>usr.usrId === usrId);\r\n\r\n        if (user.usrPwd !== usrPwd) {\r\n            callback({success: false, err: '原密碼錯誤'})\r\n        } else {\r\n            db.setValueToDb(\"USER\", usr=>usr.usrId === usrId, 'usrPwd', NewUsrPwd);\r\n            callback({success: 1});\r\n        }\r\n    };\r\n\r\n\r\n    ///////////////////後臺\r\n\r\n    //給資料表新增壹個row\r\n    app.post('/:adminPwd/table/:tableName', function (req, res) {\r\n        if (req.params.adminPwd !== 'fHfKJp3iSAfhvd9fjn23Z5KMA6Sd') {\r\n            res.json({success: false});\r\n        }\r\n\r\n        try {\r\n            req.body = JSON.parse(req.body.data);\r\n            let rows = req.body.rows;\r\n            for (let row of rows) {\r\n                db.pushToDb(req.params.tableName, row);\r\n            }\r\n            res.json({success: true});\r\n        } catch (e) {\r\n\r\n            res.json({success: false});\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n};\r\n\r\nmodule.exports = {Server, connectMongo};\r\n\r\n"],"sourceRoot":"/source/"}