{"version":3,"sources":["database.js"],"names":[],"mappings":"AAAA;;;;;;;;IAEM;;;;AAMF,aANE,QAMF,CAAa,QAAb,EAAsB,MAAtB,EAA8B;8BAN5B,UAM4B;;AAC1B,YAAG,UAAQ,OAAO,KAAP,EAAc;AACrB,qBAAS,KAAT,GAAiB,IAAjB,CADqB;SAAzB;;AAKA,iBAAS,OAAT,GAAmB,QAAnB,CAN0B;;AAQ1B,iBAAS,EAAT,CAAY,QAAZ,GAAqB,UAAS,KAAT,EAAgB,KAAhB,EAAuB;;;AAGxC,gBAAG,SAAS,KAAT,EAAe;AACd,sBAAM,GAAN,GAAY,MAAI,IAAI,IAAJ,GAAW,OAAX,EAAJ,CADE;AAEd,yBAAS,EAAT,CAAY,KAAZ,EAAmB,IAAnB,CAAwB,KAAxB,EAFc;aAAlB,MAIK;AACD,yBAAS,OAAT,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,SAAnC,CAA6C,KAA7C,EAAoD,IAApD,CAAyD,aAAI;AACzD,0BAAM,GAAN,GAAY,EAAE,UAAF,CAD6C;AAEzD,6BAAS,EAAT,CAAY,KAAZ,EAAmB,IAAnB,CAAwB,KAAxB,EAFyD;iBAAJ,CAAzD,CAGI,KAHJ,CAGU;2BAAG,QAAQ,GAAR,CAAY,CAAZ;iBAAH,CAHV,CADC;aAJL;SAHiB,CARK;;AAuBhC,iBAAS,EAAT,CAAY,YAAZ,GAAyB,UAAS,KAAT,EAAgB,KAAhB,EAAuB;;;AAGtC,gBAAG,SAAS,KAAT,EAAe;AACd,sBAAM,GAAN,GAAY,MAAI,IAAI,IAAJ,GAAW,OAAX,EAAJ,CADE;AAEd,yBAAS,EAAT,CAAY,KAAZ,EAAmB,IAAnB,CAAwB,KAAxB,EAFc;aAAlB,MAIK;AACb,yBAAS,EAAT,CAAY,KAAZ,EAAmB,IAAnB,CAAwB,KAAxB,EADa;AAED,yBAAS,OAAT,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,SAAnC,CAA6C,KAA7C,EAAoD,IAApD,CAAyD,aAAI;AACzD,0BAAM,GAAN,GAAY,EAAE,UAAF,CAD6C;iBAAJ,CAAzD,CAGI,KAHJ,CAGU;2BAAG,QAAQ,GAAR,CAAY,CAAZ;iBAAH,CAHV,CAFC;aAJL;SAHe,CAvBO;;AAuC1B,iBAAS,EAAT,CAAY,aAAZ,GAA0B,UAAS,KAAT,EAAgB,SAAhB,EAA2B;AACjD,gBAAI,QAAQ,SAAS,EAAT,CAAY,KAAZ,EAAmB,SAAnB,CAA6B,SAA7B,CAAR,CAD6C;AAEjD,qBAAS,EAAT,CAAY,KAAZ,EAAmB,MAAnB,CAA0B,KAA1B,EAAiC,CAAjC,EAFiD;AAGjD,aAAC,SAAS,KAAT,IAAkB,SAAS,OAAT,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,SAAnC,CAA6C,EAAC,KAAK,SAAS,EAAT,CAAY,KAAZ,EAAmB,KAAnB,EAA0B,GAA1B,EAAnD,CAAnB;;;AAHiD,SAA3B,CAvCA;;AA+C1B,iBAAS,EAAT,CAAY,YAAZ,GAAyB,UAAS,KAAT,EAAgB,SAAhB,EAA2B,MAA3B,EAAmC,QAAnC,EAA6C;;AAElE,gBAAI,QAAQ,SAAS,EAAT,CAAY,KAAZ,EAAmB,SAAnB,CAA6B,SAA7B,CAAR,CAF8D;AAGlE,gBAAI,SAAS,SAAS,EAAT,CAAY,KAAZ,EAAmB,KAAnB,EAA0B,MAA1B,IAAoC,QAApC,CAHqD;AAIlE,gBAAI,MAAM,EAAN,CAJ8D;AAKlE,gBAAI,MAAJ,IAAc,QAAd,CALkE;AAMlE,aAAC,SAAS,KAAT,IAAkB,SAAS,OAAT,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,SAAnC,CAA6C,EAAC,KAAK,SAAS,EAAT,CAAY,KAAZ,EAAmB,KAAnB,EAA0B,GAA1B,EAAnD,EAAmF,EAAC,MAAM,GAAN,EAApF,EAAgG,KAAhG,CAAsG;uBAAG,QAAQ,GAAR,CAAY,CAAZ;aAAH,CAAzH;;;;AANkE,SAA7C,CA/CC;;AA4D1B,iBAAS,EAAT,CAAY,eAAZ,GAA4B,UAAS,KAAT,EAAgB,KAAhB,EAAuB;AAC/C,mBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACnC,oBAAG,SAAS,KAAT,EAAe;AACd,0BAAM,GAAN,GAAY,MAAI,IAAI,IAAJ,GAAW,OAAX,EAAJ,CADE;AAEd,6BAAS,EAAT,CAAY,KAAZ,EAAmB,IAAnB,CAAwB,KAAxB,EAFc;AAGd,8BAHc;iBAAlB,MAKK;AACD,6BAAS,OAAT,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,SAAnC,CAA6C,KAA7C,EAAoD,IAApD,CAAyD,aAAI;AACzD,8BAAM,GAAN,GAAY,EAAE,UAAF,CAD6C;AAEzD,iCAAS,EAAT,CAAY,KAAZ,EAAmB,IAAnB,CAAwB,KAAxB,EAFyD;AAGzD,kCAHyD;qBAAJ,CAAzD,CAIG,KAJH,CAIS;+BAAG,OAAO,CAAP;qBAAH,CAJT,CADC;iBALL;aADe,CAAnB,CAD+C;SAAvB,CA5DF;;AA8E1B,iBAAS,EAAT,CAAY,oBAAZ,GAAiC,UAAS,KAAT,EAAgB,SAAhB,EAA2B;AACxD,mBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;;AAEnC,oBAAI,QAAQ,SAAS,EAAT,CAAY,KAAZ,EAAmB,SAAnB,CAA6B,SAA7B,CAAR,CAF+B;AAGnC,yBAAS,EAAT,CAAY,KAAZ,EAAmB,MAAnB,CAA0B,KAA1B,EAAiC,CAAjC,EAHmC;AAInC,iBAAC,SAAS,KAAT,IAAkB,SAAS,OAAT,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,SAAnC,CAA6C,EAAC,KAAK,SAAS,EAAT,CAAY,KAAZ,EAAmB,KAAnB,EAA0B,GAA1B,EAAnD,EAAmF,IAAnF,CAAwF,aAAI;AAC3G,8BAD2G;iBAAJ,CAAxF,CAEhB,KAFgB,CAEV;2BAAG,OAAO,CAAP;iBAAH,CAFT,CAJmC;aAApB,CAAnB,CADwD;SAA3B,CA9EP;;AA0F1B,iBAAS,EAAT,CAAY,mBAAZ,GAAgC,UAAS,KAAT,EAAgB,SAAhB,EAA2B,MAA3B,EAAmC,QAAnC,EAA6C;;AAEzE,mBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;;AAEnC,oBAAI,QAAQ,SAAS,EAAT,CAAY,KAAZ,EAAmB,SAAnB,CAA6B,SAA7B,CAAR,CAF+B;AAGnC,oBAAI,SAAS,SAAS,EAAT,CAAY,KAAZ,EAAmB,KAAnB,EAA0B,MAA1B,IAAoC,QAApC,CAHsB;AAInC,oBAAI,MAAM,EAAN,CAJ+B;AAKnC,oBAAI,MAAJ,IAAc,QAAd,CALmC;AAMnC,iBAAC,SAAS,KAAT,IAAkB,SAAS,OAAT,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,SAAnC,CAA6C,EAAC,KAAK,SAAS,EAAT,CAAY,KAAZ,EAAmB,KAAnB,EAA0B,GAA1B,EAAnD,EAAmF,EAAC,MAAM,GAAN,EAApF,EAAgG,KAAhG,CAAsG;2BAAG,QAAQ,GAAR,CAAY,CAAZ;iBAAH,CAAtG,CAAyH,IAAzH,CAA8H,aAAG;AAChJ,8BADgJ;iBAAH,CAA9H,CAEhB,KAFgB,CAEV;2BAAG,OAAO,CAAP;iBAAH,CAFT,CANmC;aAApB,CAAnB,CAFyE;SAA7C,CA1FN;KAA9B;;iBANE;;mCAgHQ;;;AACN,mBAAO,IAAI,OAAJ;oEAAY,iBAAM,OAAN;;;;;;2CACT,SAAS,OAAT,CAAiB,UAAjB,CAA4B,MAA5B,EAAoC,IAApC,CAAyC,EAAzC,EAA6C,OAA7C,GAAuD,IAAvD,CAA4D;+CAAG,SAAS,EAAT,CAAY,IAAZ,GAAmB,CAAnB;qCAAH;;;;2CAC5D,SAAS,OAAT,CAAiB,UAAjB,CAA4B,QAA5B,EAAsC,IAAtC,CAA2C,EAA3C,EAA+C,OAA/C,GAAyD,IAAzD,CAA8D;+CAAG,SAAS,EAAT,CAAY,MAAZ,GAAqB,CAArB;qCAAH;;;;2CAC9D,SAAS,OAAT,CAAiB,UAAjB,CAA4B,OAA5B,EAAqC,IAArC,CAA0C,EAA1C,EAA8C,OAA9C,GAAwD,IAAxD,CAA6D;+CAAG,SAAS,EAAT,CAAY,KAAZ,GAAoB,CAApB;qCAAH;;;;2CAC7D,SAAS,OAAT,CAAiB,UAAjB,CAA4B,cAA5B,EAA4C,IAA5C,CAAiD,EAAjD,EAAqD,OAArD,GAA+D,IAA/D,CAAoE;+CAAG,SAAS,EAAT,CAAY,YAAZ,GAA2B,CAA3B;qCAAH;;;;2CACpE,SAAS,OAAT,CAAiB,UAAjB,CAA4B,cAA5B,EAA4C,IAA5C,CAAiD,EAAjD,EAAqD,OAArD,GAA+D,IAA/D,CAAoE;+CAAG,SAAS,EAAT,CAAY,YAAZ,GAA2B,CAA3B;qCAAH;;;;2CACpE,SAAS,OAAT,CAAiB,UAAjB,CAA4B,aAA5B,EAA2C,IAA3C,CAAgD,EAAhD,EAAoD,OAApD,GAA8D,IAA9D,CAAmE;+CAAG,SAAS,EAAT,CAAY,WAAZ,GAA0B,CAA1B;qCAAH;;;;2CACnE,SAAS,OAAT,CAAiB,UAAjB,CAA4B,UAA5B,EAAwC,IAAxC,CAA6C,EAA7C,EAAiD,OAAjD,GAA2D,IAA3D,CAAgE;+CAAG,SAAS,EAAT,CAAY,QAAZ,GAAuB,CAAvB;qCAAH;;;;2CAChE,SAAS,OAAT,CAAiB,UAAjB,CAA4B,OAA5B,EAAqC,IAArC,CAA0C,EAA1C,EAA8C,OAA9C,GAAwD,IAAxD,CAA6D;+CAAG,SAAS,EAAT,CAAY,KAAZ,GAAoB,CAApB;qCAAH;;;;2CAC7D,SAAS,OAAT,CAAiB,UAAjB,CAA4B,MAA5B,EAAoC,IAApC,CAAyC,EAAzC,EAA6C,OAA7C,GAAuD,IAAvD,CAA4D;+CAAG,SAAS,EAAT,CAAY,IAAZ,GAAmB,CAAnB;qCAAH;;;AAClE,4CAAQ,SAAS,EAAT,CAAR;;;;;;;;iBAVe;;;;;eAAZ,CAAP,CADM;;;;iCAgBD,OAAO,OAAO;;;AAGnB,oBAAQ,GAAR,CAAY,SAAS,OAAT,CAAZ,CAHmB;;AAKnB,aAAC,SAAS,KAAT,IAAkB,SAAS,OAAT,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,SAAnC,CAA6C,KAA7C,EAAoD,IAApD,CAAyD,aAAI;AAC5E,sBAAM,GAAN,GAAY,EAAE,UAAF,CADgE;AAE5E,yBAAS,EAAT,CAAY,KAAZ,EAAmB,IAAnB,CAAwB,KAAxB,EAF4E;aAAJ,CAA5E,CALmB;;;;sCAWT,OAAO,WAAW;AAC5B,gBAAI,QAAQ,SAAS,EAAT,CAAY,KAAZ,EAAmB,SAAnB,CAA6B,SAA7B,CAAR,CADwB;AAE5B,qBAAS,EAAT,CAAY,KAAZ,EAAmB,MAAnB,CAA0B,KAA1B,EAAiC,CAAjC,EAF4B;AAG5B,aAAC,SAAS,KAAT,IAAkB,SAAS,OAAT,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,SAAnC,CAA6C,EAAC,KAAK,SAAS,EAAT,CAAY,KAAZ,EAAmB,GAAnB,EAAnD,CAAnB;;;AAH4B;;;qCAQnB,OAAO,WAAW,QAAQ,UAAU;;AAE7C,gBAAI,QAAQ,SAAS,EAAT,CAAY,KAAZ,EAAmB,SAAnB,CAA6B,SAA7B,CAAR,CAFyC;AAG7C,gBAAI,SAAS,SAAS,EAAT,CAAY,KAAZ,EAAmB,KAAnB,EAA0B,MAA1B,IAAoC,QAApC,CAHgC;AAI7C,gBAAI,MAAM,EAAN,CAJyC;AAK7C,gBAAI,MAAJ,IAAc,QAAd,CAL6C;AAM7C,aAAC,SAAS,KAAT,IAAkB,SAAS,OAAT,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,SAAnC,CAA6C,EAAC,KAAK,SAAS,EAAT,CAAY,KAAZ,EAAmB,GAAnB,EAAnD,EAA4E,EAAC,MAAM,GAAN,EAA7E,EAAyF,KAAzF,CAA+F;uBAAG,QAAQ,GAAR,CAAY,CAAZ;aAAH,CAAlH;;;;AAN6C;;;wCAajC,OAAO,OAAO;AAC1B,mBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACnC,iBAAC,SAAS,KAAT,IAAkB,SAAS,OAAT,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,SAAnC,CAA6C,KAA7C,EAAoD,IAApD,CAAyD,aAAI;AAC5E,0BAAM,GAAN,GAAY,EAAE,UAAF,CADgE;AAE5E,6BAAS,EAAT,CAAY,KAAZ,EAAmB,IAAnB,CAAwB,KAAxB,EAF4E;AAG5E,8BAH4E;iBAAJ,CAAzD,CAIhB,KAJgB,CAIV;2BAAG,OAAO,CAAP;iBAAH,CAJT,CADmC;aAApB,CAAnB,CAD0B;;;;6CAWT,OAAO,WAAW;AACnC,mBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;;AAEnC,oBAAI,QAAQ,SAAS,EAAT,CAAY,KAAZ,EAAmB,SAAnB,CAA6B,SAA7B,CAAR,CAF+B;AAGnC,yBAAS,EAAT,CAAY,KAAZ,EAAmB,MAAnB,CAA0B,KAA1B,EAAiC,CAAjC,EAHmC;AAInC,iBAAC,SAAS,KAAT,IAAkB,SAAS,OAAT,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,SAAnC,CAA6C,EAAC,KAAK,SAAS,EAAT,CAAY,KAAZ,EAAmB,GAAnB,EAAnD,EAA4E,IAA5E,CAAiF,aAAI;AACpG,8BADoG;iBAAJ,CAAjF,CAEhB,KAFgB,CAEV;2BAAG,OAAO,CAAP;iBAAH,CAFT,CAJmC;aAApB,CAAnB,CADmC;;;;4CAYnB,OAAO,WAAW,QAAQ,UAAU;;AAEpD,mBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;;AAEnC,oBAAI,QAAQ,SAAS,EAAT,CAAY,KAAZ,EAAmB,SAAnB,CAA6B,SAA7B,CAAR,CAF+B;AAGnC,oBAAI,SAAS,SAAS,EAAT,CAAY,KAAZ,EAAmB,KAAnB,EAA0B,MAA1B,IAAoC,QAApC,CAHsB;AAInC,oBAAI,MAAM,EAAN,CAJ+B;AAKnC,oBAAI,MAAJ,IAAc,QAAd,CALmC;AAMnC,iBAAC,SAAS,KAAT,IAAkB,SAAS,OAAT,CAAiB,UAAjB,CAA4B,KAA5B,EAAmC,SAAnC,CAA6C,EAAC,KAAK,SAAS,EAAT,CAAY,KAAZ,EAAmB,GAAnB,EAAnD,EAA4E,EAAC,MAAM,GAAN,EAA7E,EAAyF,KAAzF,CAA+F;2BAAG,QAAQ,GAAR,CAAY,CAAZ;iBAAH,CAA/F,CAAkH,IAAlH,CAAuH,aAAG;AACzI,8BADyI;iBAAH,CAAvH,CAEhB,KAFgB,CAEV;2BAAG,OAAO,CAAP;iBAAH,CAFT,CANmC;aAApB,CAAnB,CAFoD;;;;;;;;;;;;;;oBAclD,SAAQ;AACV,oBAAQ,OAAR,CADU;;;;WArMZ;;;SACK,KAAK;AADV,SAEK,UAAU;AAFf,SAGK,QAAQ;;;AAyMnB,OAAO,OAAP,GAAiB,QAAjB","file":"database.js","sourcesContent":["'use strict';\r\n\r\nclass Database {\r\n    static db = {};\r\n    static mongoDb = null;\r\n    static debug = false;\r\n\r\n    //option : {debug:如果为true,不会存储到mongodb}\r\n    constructor (_mongoDb,option) {\r\n        if(option&&option.debug) {\r\n            Database.debug = true;\r\n\r\n        }\r\n\r\n        Database.mongoDb = _mongoDb;\r\n\r\n        Database.db.pushToDb=function(table, value) {\r\n\r\n            //jsonDb.push('/db/' + table + '[]', value);\r\n            if(Database.debug){\r\n                value._id = 'r'+new Date().getTime();\r\n                Database.db[table].push(value);\r\n\r\n            }else{\r\n                Database.mongoDb.collection(table).insertOne(value).then(r=> {\r\n                    value._id = r.insertedId;\r\n                    Database.db[table].push(value);\r\n                 }).catch(e=>console.log(e));\r\n            }\r\n        }\r\n\t\t\r\n\t\tDatabase.db.pushManyToDb=function(table, value) {\r\n\r\n            //jsonDb.push('/db/' + table + '[]', value);\r\n            if(Database.debug){\r\n                value._id = 'r'+new Date().getTime();\r\n                Database.db[table].push(value);\r\n\r\n            }else{\r\n\t\t\t\tDatabase.db[table].push(value);\r\n                Database.mongoDb.collection(table).insertOne(value).then(r=> {\r\n                    value._id = r.insertedId;\r\n                    \r\n                 }).catch(e=>console.log(e));\r\n            }\r\n        }\r\n\r\n        Database.db.delFromJsonDb=function(table, condition) {\r\n            let index = Database.db[table].findIndex(condition);\r\n            Database.db[table].splice(index, 1);\r\n            !Database.debug && Database.mongoDb.collection(table).deleteOne({_id: Database.db[table][index]._id});\r\n\r\n            //jsonDb.delete(`/Database.db/${table}[${index}]`);\r\n        }\r\n\r\n        Database.db.setValueToDb=function(table, condition, setKey, newValue) {\r\n            // console.log(Database.db[table]);\r\n            let index = Database.db[table].findIndex(condition);\r\n            let oldObj = Database.db[table][index][setKey] = newValue;\r\n            let set = {};\r\n            set[setKey] = newValue;\r\n            !Database.debug && Database.mongoDb.collection(table).updateOne({_id: Database.db[table][index]._id}, {$set: set}).catch(e=>console.log(e));\r\n\r\n            //jsonDb.push('/db/' + table + `[${index}]`, oldObj);\r\n            //    db[table].push(value);\r\n        }\r\n\r\n\r\n        Database.db.pushToDbPromise=function(table, value) {\r\n            return new Promise((resolve, reject)=> {\r\n                if(Database.debug){\r\n                    value._id = 'r'+new Date().getTime();\r\n                    Database.db[table].push(value);\r\n                    resolve();\r\n\r\n                }else{\r\n                    Database.mongoDb.collection(table).insertOne(value).then(r=> {\r\n                        value._id = r.insertedId;\r\n                        Database.db[table].push(value);\r\n                        resolve();\r\n                    }).catch(e=>reject(e));\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        Database.db.delFromJsonDbPromise=function(table, condition) {\r\n            return new Promise((resolve, reject)=> {\r\n\r\n                let index = Database.db[table].findIndex(condition);\r\n                Database.db[table].splice(index, 1);\r\n                !Database.debug && Database.mongoDb.collection(table).deleteOne({_id: Database.db[table][index]._id}).then(r=> {\r\n                    resolve();\r\n                }).catch(e=>reject(e));\r\n\r\n            });\r\n        }\r\n\r\n        Database.db.setValueToDbPromise=function(table, condition, setKey, newValue) {\r\n\r\n            return new Promise((resolve, reject)=> {\r\n\r\n                let index = Database.db[table].findIndex(condition);\r\n                let oldObj = Database.db[table][index][setKey] = newValue;\r\n                let set = {};\r\n                set[setKey] = newValue;\r\n                !Database.debug && Database.mongoDb.collection(table).updateOne({_id: Database.db[table][index]._id}, {$set: set}).catch(e=>console.log(e)).then(r=>{\r\n                    resolve();\r\n                }).catch(e=>reject(e));\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    toMemory(){\r\n        return new Promise(async resolve=>{\r\n            await Database.mongoDb.collection('DISH').find({}).toArray().then(r=>Database.db.DISH = r);\r\n            await Database.mongoDb.collection('FOLLOW').find({}).toArray().then(r=>Database.db.FOLLOW = r);\r\n            await Database.mongoDb.collection('GROUP').find({}).toArray().then(r=>Database.db.GROUP = r);\r\n            await Database.mongoDb.collection('GROUP_DISHES').find({}).toArray().then(r=>Database.db.GROUP_DISHES = r);\r\n            await Database.mongoDb.collection('GROUP_MEMBER').find({}).toArray().then(r=>Database.db.GROUP_MEMBER = r);\r\n            await Database.mongoDb.collection('GROUP_ORDER').find({}).toArray().then(r=>Database.db.GROUP_ORDER = r);\r\n            await Database.mongoDb.collection('MERCHANT').find({}).toArray().then(r=>Database.db.MERCHANT = r);\r\n            await Database.mongoDb.collection('ORDER').find({}).toArray().then(r=>Database.db.ORDER = r);\r\n            await Database.mongoDb.collection('USER').find({}).toArray().then(r=>Database.db.USER = r);\r\n            resolve(Database.db);\r\n        })\r\n\r\n    }\r\n\r\n    pushToDb(table, value) {\r\n\r\n        //jsonDb.push('/db/' + table + '[]', value);\r\n        console.log(Database.mongoDb);\r\n\r\n        !Database.debug && Database.mongoDb.collection(table).insertOne(value).then(r=> {\r\n            value._id = r.insertedId;\r\n            Database.db[table].push(value);\r\n        });\r\n    }\r\n\r\n    delFromJsonDb(table, condition) {\r\n        let index = Database.db[table].findIndex(condition);\r\n        Database.db[table].splice(index, 1);\r\n        !Database.debug && Database.mongoDb.collection(table).deleteOne({_id: Database.db[table]._id});\r\n\r\n        //jsonDb.delete(`/Database.db/${table}[${index}]`);\r\n    }\r\n\r\n    setValueToDb(table, condition, setKey, newValue) {\r\n        // console.log(Database.db[table]);\r\n        let index = Database.db[table].findIndex(condition);\r\n        let oldObj = Database.db[table][index][setKey] = newValue;\r\n        let set = {};\r\n        set[setKey] = newValue;\r\n        !Database.debug && Database.mongoDb.collection(table).updateOne({_id: Database.db[index]._id}, {$set: set}).catch(e=>console.log(e));\r\n\r\n        //jsonDb.push('/db/' + table + `[${index}]`, oldObj);\r\n        //    db[table].push(value);\r\n    }\r\n\r\n\r\n    pushToDbPromise(table, value) {\r\n        return new Promise((resolve, reject)=> {\r\n            !Database.debug && Database.mongoDb.collection(table).insertOne(value).then(r=> {\r\n                value._id = r.insertedId;\r\n                Database.db[table].push(value);\r\n                resolve();\r\n            }).catch(e=>reject(e));\r\n        });\r\n\r\n    }\r\n\r\n    delFromJsonDbPromise(table, condition) {\r\n        return new Promise((resolve, reject)=> {\r\n\r\n            let index = Database.db[table].findIndex(condition);\r\n            Database.db[table].splice(index, 1);\r\n            !Database.debug && Database.mongoDb.collection(table).deleteOne({_id: Database.db[table]._id}).then(r=> {\r\n                resolve();\r\n            }).catch(e=>reject(e));\r\n\r\n        });\r\n    }\r\n\r\n    setValueToDbPromise(table, condition, setKey, newValue) {\r\n\r\n        return new Promise((resolve, reject)=> {\r\n\r\n            let index = Database.db[table].findIndex(condition);\r\n            let oldObj = Database.db[table][index][setKey] = newValue;\r\n            let set = {};\r\n            set[setKey] = newValue;\r\n            !Database.debug && Database.mongoDb.collection(table).updateOne({_id: Database.db[index]._id}, {$set: set}).catch(e=>console.log(e)).then(r=>{\r\n                resolve();\r\n            }).catch(e=>reject(e));\r\n        });\r\n    }\r\n\r\n    debug(isDebug){\r\n        debug = isDebug;\r\n     }\r\n\r\n\r\n}\r\n\r\nmodule.exports = Database;\r\n\r\n"],"sourceRoot":"/source/"}